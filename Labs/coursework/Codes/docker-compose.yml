services:
  # React клиент
  client:
    build:
      context: ./Client
    # develop:
    #   watch:
    #     - action: sync
    #       path: ./Client
    #       target: /app
    #     - action: rebuild
    #       path: ./Client/package.json
    labels:
      - com.centurylinklabs.watchtower.enable=true
    ports:
      - "3001:80"
    depends_on:
      - server
    networks:
      - cinema-network

  # Node.js сервер
  server:
    build:
      context: ./Server
    # develop:
    #   watch:
    #     - action: sync
    #       path: ./Server
    #       target: /app
    #     - action: rebuild
    #       path: ./Server/package.json
    labels:
      - com.centurylinklabs.watchtower.enable=true
      - "monitoring.enable=true"
    environment:
      - DB_USER=${DB_USER}
      - DB_PASS=${DB_PASS}
      - DB_NAME=${DB_NAME}
      - DB_HOST=db
      - DB_PORT=5432
      - JWT_SECRET=${JWT_SECRET}
      - REFRESH_SECRET=${REFRESH_SECRET}
    depends_on:
      db:
        condition: service_healthy
    deploy:
      replicas: 3
    networks:
      - cinema-network
      - monitoring-net

  # PostgreSQL база данных
  db:
    image: postgres:17
    container_name: cinema-db
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASS}
      POSTGRES_DB: ${DB_NAME}
    volumes:
      - ./Server/config/db.sql:/docker-entrypoint-initdb.d/db.sql
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - cinema-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER} -d ${DB_NAME}"]
      interval: 10s
      timeout: 5s
      retries: 5

  nginx:
    image: nginx:alpine
    ports:
      - "8080:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
    depends_on:
      - server
    networks:
      - cinema-network

  # watchtower:
  #   image: containrrr/watchtower
  #   volumes: 
  #     - /var/run/docker.sock:/var/run/docker.sock
  #   command: --interval 30 --label-enable --cleanup
  #   networks:
  #     - cinema-network

networks:
  cinema-network:
    driver: bridge
  monitoring-net:
    driver: bridge

volumes:
  postgres_data:
  # prometheus_data:
  # loki_data:
  # grafana_data:
